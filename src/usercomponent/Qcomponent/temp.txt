import React from 'react'
import { FaArrowLeftLong } from "react-icons/fa6";
import { AiOutlineCloudUpload } from "react-icons/ai";
import { MdDeleteOutline } from "react-icons/md";

function Profile() {
  return (
    <div className='w-full h-screen'>
      <nav className="w-full h-10 mb-16 sm:mb-0 bg-gray-300">
         <h1 className="text-xl p-1">
           <FaArrowLeftLong className="inline mx-4" />
           My Profile
         </h1>
       </nav>
       <div className="flex flex-col gap-4 sm:gap-20 sm:flex-row-reverse justify-center items-center w-full h-[90%]">
       <div className=' sm:w-1/3 m-1 sm:py-8 py-0 px-4 w-full sm:h-[80%] flex sm:flex-col'>
           <div className="sm:w-[280px] w-[120px] h-[120px] sm:h-[75%]">
       <img src="https://images.unsplash.com/photo-1689598797204-c584f52a5ad8?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fG1hbiUyMGltZ3xlbnwwfHwwfHx8MA%3D%3D" alt="Profile" className="w-full h-full object-cover rounded" />
      </div>
        <div className="flex gap-3 my-8 sm:my-0 p-2 w-1/2 h-full ">
         <i className="text-2xl cursor-pointer w-12 flex items-center justify-center h-12 bg-red-200  rounded-md">
            <AiOutlineCloudUpload />
         </i>
         <i className="text-2xl cursor-pointer w-12 flex items-center justify-center h-12 bg-red-200  rounded-md">
            <MdDeleteOutline />
         </i>
       </div>

       </div>
        <div className=' p-3 sm:w-1/3 w-full h-[80%]'>
        <div className='flex sm:flex-row flex-col gap-1'>
             <div className="w-full md:w-1/2">
           <label htmlFor="firstName" className="block mb-1">First Name</label>
           <input
            type="text"
            id="firstName"
            className="border w-full p-1 bg-slate-50 rounded-md"
            placeholder="Mohammed"
          />
        </div>
        <div className="w-full md:w-1/2">
          <label htmlFor="lastName" className="block mb-1">Last Name</label>
          <input
            type="text"
            id="lastName"
            className="border w-full p-1 bg-slate-50 rounded-md"
            placeholder="Hussain"
          />
        </div>
        </div>
               <div className="flex flex-col gap-2">
         <div>
          <label htmlFor="field1" className="block mb-1">Field 1</label>
           <input
            type="text"
            id="field1"
            className="border w-full p-1 bg-slate-50 rounded-md"
          />
        </div>
        <div>
          <label htmlFor="field2" className="block mb-1">Field 2</label>
          <input
            type="text"
            id="field2"
            className="border w-full p-1 bg-slate-50 rounded-md"
          />
        </div>
        <div>
          <label htmlFor="field3" className="block mb-1">Field 3</label>
          <input
            type="text"
            id="field3"
            className="border w-full p-1 bg-slate-50 rounded-md"
          />
        </div>
        <div>
          <label htmlFor="field3" className="block mb-1">Field 3</label>
          <input
            type="text"
            id="field3"
            className="border w-full p-1 bg-slate-50 rounded-md"
          />
        </div>
        <div>
          <label htmlFor="field3" className="block mb-1">Field 3</label>
          <input
            type="text"
            id="field3"
            className="border w-full p-1 bg-slate-50 rounded-md"
          />
        </div>
        <button className="bg-black w-full  text-white py-2 rounded-md mt-4 hover:bg-gray-800">
          Save Changes
        </button>
      </div>

      </div>

        </div>
      </div>
  )
}

export default Profile


import { useState } from 'react';
import { FaArrowLeftLong } from "react-icons/fa6";
import { CiSearch } from "react-icons/ci";
import { IoIosArrowDown, IoIosArrowUp } from "react-icons/io";

function Profile() {
  // Initialize state as an array of false values, one for each section
  const [openSections, setOpenSections] = useState([false, false, false, false, false, false, false]);

  // Dropdown data for section titles
  const dropdowndata = [
    { dropdownName: 'Orders' },
    { dropdownName: 'Delivery' },
    { dropdownName: 'Payment' },
    { dropdownName: 'Cancellations' },
    { dropdownName: 'Refund & Returns' },
    { dropdownName: 'Account' },
    { dropdownName: 'Other' },
  ];

  // Handler to toggle the open state of a specific section
  const toggleSection = (index) => {
    setOpenSections((prevSections) => {
      const newSections = [...prevSections];
      newSections[index] = !newSections[index]; // Toggle the specific section
      return newSections;
    });
  };

  return (
    <div className='w-full h-screen'>
      <nav className="w-full h-10 mb-16 sm:mb-0 bg-white shadow-lg">
        <h1 className="text-xl p-1">
          <FaArrowLeftLong className="inline mx-4" />
          Help & Support
        </h1>
        <div className='flex flex-col justify-center itemce p-4'>
          <h1 className='underline my-2'>What your Query about?</h1>
          <div className='flex border w-full h-10 items-center rounded-lg border-gray-600'>
            <CiSearch className='text-xl mx-1 cursor-pointer' />
            <input type="text" placeholder='Search your Query here' className='outline-none' />
          </div>
          <div>
            {/* Map through the dropdowndata array to render each section */}
            {dropdowndata.map((item, index) => (
              <div key={index} className=' p-2 my-3'>
                <div className='flex justify-between'>
                  <h1>{item.dropdownName}</h1>
                  {openSections[index] ? (
                    <IoIosArrowUp onClick={() => toggleSection(index)} />
                  ) : (
                    <IoIosArrowDown onClick={() => toggleSection(index)} />
                  )}
                </div>
                {openSections[index] && (
                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptas tempora asperiores totam voluptatem excepturi saepe hic atque quaerat optio provident! Ea sunt, soluta excepturi tempore sed eveniet alias, similique recusandae aliquam, ducimus ratione? Asperiores sequi sit assumenda, dicta odit quos placeat officiis obcaecati ducimus sed rerum quis consequuntur soluta omnis ipsa neque nostrum dolorem ratione nobis veniam cum. Rerum, cupiditate.</p>
                )}
              </div>
            ))}
          </div>
        </div>
      </nav>
    </div>
  );
}

export default Profile;


import React from 'react';
import Tesseract from 'tesseract.js';

const VibrationButton = () => {
  const [isLoading, setIsLoading] = React.useState(false);
  const [image, setImage] = React.useState('');
  const [text, setText] = React.useState('');
  const [progress, setProgress] = React.useState(0);

  const handleSubmit = () => {
    setIsLoading(true);
    Tesseract.recognize(image, 'eng','ara', {
      logger: (m) => {
        console.log(m);
        if (m.status === 'recognizing text') {
          setProgress(parseInt(m.progress * 100));
        }
      },
    })
      .catch((err) => {
        console.error(err);
      })
      .then((result) => {
        console.log(result.data);
        setText(result.data.text);
        setIsLoading(false);
      });
  };

  return (
    <div className="container h-screen flex items-center justify-center">
      <div className="w-full max-w-md flex flex-col justify-center">
        {!isLoading && <h1 className="text-center text-3xl font-bold py-5">Image To Text</h1>}
        {isLoading && (
          <>
            <progress className="w-full h-2 mb-4" value={progress} max="100">
              {progress}%
            </progress>
            <p className="text-center mb-0">Converting: {progress} %</p>
          </>
        )}
        {!isLoading && !text && (
          <>
            <input
              type="file"
              onChange={(e) => setImage(URL.createObjectURL(e.target.files[0]))}
              className="w-full p-2 border border-gray-300 rounded-md mb-4"
            />
            <button
              onClick={handleSubmit}
              className="w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600 transition mt-4"
            >
              Convert
            </button>
          </>
        )}
        {!isLoading && text && (
          <>
            <textarea
              className="w-full p-4 border border-gray-300 rounded-md mt-4"
              rows="10"
              value={text}
              onChange={(e) => setText(e.target.value)}
            ></textarea>
          </>
        )}
      </div>
    </div>
  );
};

export default VibrationButton;
import React from 'react'

function Profile() {
  return (
    <div>